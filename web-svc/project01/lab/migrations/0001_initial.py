# Generated by Django 3.1.5 on 2021-04-02 10:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResearchResults',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('github_link', models.URLField(null=True)),
                ('youtube_link', models.URLField(null=True)),
                ('demo_link', models.URLField(null=True)),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'research_results',
            },
        ),
        migrations.CreateModel(
            name='PaperCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'paper_category',
            },
        ),
        migrations.CreateModel(
            name='MemberCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'member_category',
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('document', models.FileField(upload_to='documents/')),
                ('update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('topic', models.JSONField(null=True)),
                ('publish_time', models.CharField(max_length=10)),
                ('author', models.CharField(max_length=45)),
                ('paper_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lab.papercategory')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'library',
            },
        ),
        migrations.CreateModel(
            name='LabMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('update_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('graduation_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('expertise', models.JSONField(null=True)),
                ('relevant_info', models.JSONField(null=True)),
                ('member_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='lab.membercategory')),
                ('update_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lab_member',
            },
        ),
    ]
